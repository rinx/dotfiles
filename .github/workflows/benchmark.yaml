name: benchmark
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
jobs:
  benchmark:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Free disk space
        uses: wimpysworld/nothing-but-nix@6af122a9403f936ef689e44cc013ae3f3e2f1c3b # v6
        with:
          hatchet-protocol: 'rampage'
          root-safe-haven: '3072' # Reserve 3GB on the / filesystem
          mnt-safe-haven: '2048' # Reserve 2GB on the /mnt filesystem
          nix-permission-edict: true
      - name: Generate github token
        id: generate_token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: cachix/install-nix-action@fd24c48048070c1be9acd18c9d369a83f0fe94d7 # v31
        with:
          github_access_token: ${{ steps.generate_token.outputs.token }}
          nix_path: nixpkgs=channel:nixos-unstable
          install_options: --no-daemon
      - name: Install dependencies
        run: |
          nix profile install .
      - name: nvim version
        run: |
          nvim --version
      - name: babashka version
        run: |
          bb --version
      - name: Setup dotfiles
        run: |
          make DOTDIR="$(pwd)" deploy
      - name: Install zsh plugins
        run: |
          zsh -i -c exit
      - name: Install neovim plugins
        run: |
          # Install essential plugins
          nvim --headless -c 'qall'
          # Install other plugins
          nvim --headless -c 'Lazy! sync' -c 'qall'
          # Treesitter
          nvim --headless -c 'TSInstallEnsure' -c 'qall'
          # workaround: Ensure installed correctly
          nvim --headless -c 'TSInstallEnsure' -c 'qall'
          nvim --headless -c 'TSInstallEnsure' -c 'qall'
      - name: Confirm all neovim plugins installed
        run: |
          time nvim --headless -V -c 'qall'
      - name: Run benchmark
        run: |
          bb ./.github/scripts/benchmark.clj | tee result.json
      - name: Upload benchmark result
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: benchmark-result
          path: result.json
  upload:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'push'
    needs:
      - benchmark
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Generate github token
        id: generate_token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Download benchmark result
        id: download_result
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: benchmark-result
          path: result
      - name: Upload benchmark
        uses: benchmark-action/github-action-benchmark@4bdcce38c94cec68da58d012ac24b7b1155efe8b # v1.20.7
        with:
          tool: customSmallerIsBetter
          output-file-path: ${{ steps.download_result.outputs.download-path }}/result.json
          gh-pages-branch: gh-pages
          github-token: ${{ steps.generate_token.outputs.token }}
          auto-push: true
          comment-on-alert: true
          fail-on-alert: false
          alert-threshold: '150%'
          alert-comment-cc-users: '@rinx'
